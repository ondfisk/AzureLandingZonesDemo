name: AzureLandingZonesDemo/Initiative_Definitions
on:
  pull_request:
    branches:
    - initiatives/deploy
  workflow_run:
    workflows:
    - Policy Definitions
    types: completed
jobs:
  build-canary:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Build (Canary)
    runs-on: ${{ env.vmImage }}
    env:
      azureConnection: root
      location: swedencentral
      logAnalyticsWorkspaceId: "/subscriptions/8228ddb9-d118-47b4-b4e7-1f1de7667d4d/resourceGroups/Management/providers/Microsoft.OperationalInsights/workspaces/ondfisklzcanary"
      managedIdentityId: "/subscriptions/8228ddb9-d118-47b4-b4e7-1f1de7667d4d/resourceGroups/Management/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ondfisklzcanary"
      managementGroupId: lz-canary
      policyAssignmentFolders: lz-canary, lz-canary/landing-zones/corp, lz-canary/landing-zones/online
      vmImage: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Build Template
      uses: azure/login@v1.6.0
      with:
        creds: "${{ secrets.AZURE_CREDENTIALS }}"
    - name: Build Template
      run: |-
        $ErrorActionPreference = 'stop'
        $managementGroupId = "${{ env.managementGroupId }}"
        $stagingDirectory = "${{ runner.temp }}"
        ./modules/policies/scripts/Build-InitiativeTemplate.ps1 -ManagementGroupId $managementGroupId
        az bicep build --file modules/policies/initiatives/main.bicep --outfile "$stagingDirectory/main.json"
        if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) { exit $LASTEXITCODE }
      shell: pwsh
    - name: Publish Artifacts
      uses: actions/upload-artifact@v4.1.0
      with:
        name: canary
        path: "${{ runner.temp }}"
  build-prod:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Build (Production)
    runs-on: ${{ env.vmImage }}
    env:
      azureConnection: root
      location: swedencentral
      logAnalyticsWorkspaceId: "/subscriptions/e678d35b-125e-41ad-ae35-c04dfd4162e5/resourceGroups/Management/providers/Microsoft.OperationalInsights/workspaces/ondfisklz"
      managedIdentityId: "/subscriptions/e678d35b-125e-41ad-ae35-c04dfd4162e5/resourceGroups/Management/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ondfisklz"
      managementGroupId: lz
      policyAssignmentFolders: lz, lz/landing-zones/corp, lz/landing-zones/online
      vmImage: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Build Template
      uses: azure/login@v1.6.0
      with:
        creds: "${{ secrets.AZURE_CREDENTIALS }}"
    - name: Build Template
      run: |-
        $ErrorActionPreference = 'stop'
        $managementGroupId = "${{ env.managementGroupId }}"
        $stagingDirectory = "${{ runner.temp }}"
        New-Item -Path $stagingDirectory -ItemType Directory -Force | Out-Null
        ./modules/policies/scripts/Build-InitiativeTemplate.ps1 -ManagementGroupId $managementGroupId
        az bicep build --file modules/policies/initiatives/main.bicep --outfile "$stagingDirectory/main.json"
        if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) { exit $LASTEXITCODE }
      shell: pwsh
    - name: Publish Artifacts
      uses: actions/upload-artifact@v4.1.0
      with:
        name: prod
        path: "${{ runner.temp }}"
  build-test:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Test
    runs-on: ${{ env.vmImage }}
    env:
      azureConnection: root
      vmImage: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Run Pester Tests
      run: Invoke-Pester -Path modules/policies/scripts/Test-Initiative.Tests.ps1 -CI
      shell: pwsh
    - name: Publish NUnit test results
      uses: dorny/test-reporter@v1.7.0
      if: always()
      with:
        name: Test Results
        path: "**/testResults.xml"
        reporter: dotnet-trx
        list-suites: all
        list-tests: all
        max-annotations: 10
        fail-on-error: 'true'
  validate-canary:
    name: Canary
    needs:
    - build-canary
    - build-prod
    - build-test
    runs-on: ${{ env.vmImage }}
    environment:
      name: Canary
    env:
      azureConnection: root
      location: swedencentral
      logAnalyticsWorkspaceId: "/subscriptions/8228ddb9-d118-47b4-b4e7-1f1de7667d4d/resourceGroups/Management/providers/Microsoft.OperationalInsights/workspaces/ondfisklzcanary"
      managedIdentityId: "/subscriptions/8228ddb9-d118-47b4-b4e7-1f1de7667d4d/resourceGroups/Management/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ondfisklzcanary"
      managementGroupId: lz-canary
      policyAssignmentFolders: lz-canary, lz-canary/landing-zones/corp, lz-canary/landing-zones/online
      vmImage: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && success() && github.RUN_NUMBER == 1 }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: download artifact
      uses: actions/download-artifact@v4.1.0
    - uses: actions/checkout@v4.1.0
    - name: Compare initiatives
      uses: azure/login@v1.6.0
      with:
        creds: "${{ secrets.AZURE_CREDENTIALS }}"
        enable-AzPSSession: true
    - name: Compare initiatives
      uses: azure/powershell@v1.4.0
      with:
        inlineScript: "${{ github.workspace }}/modules/policies/scripts/Compare-Initiative.ps1 -ManagementGroupId ${{ env.managementGroupId }}"
        errorActionPreference: Stop
        failOnStandardError: false
        azPSVersion: latest
    - uses: "./.github/actions/azdo_pipelines_templates_management_group_deployment"
      with:
        displayName: Validate deployment
        deploymentName: initiatives
        command: validate
        azureConnection: "${{ env.azureConnection }}"
        location: "${{ env.location }}"
        managementGroupId: "${{ env.managementGroupId }}"
        templateFile: "${{ runner.workspace }}/canary/main.json"
    - uses: "./.github/actions/azdo_pipelines_templates_management_group_deployment"
      with:
        displayName: What-if deployment
        deploymentName: initiatives
        command: what-if
        azureConnection: "${{ env.azureConnection }}"
        location: "${{ env.location }}"
        managementGroupId: "${{ env.managementGroupId }}"
        templateFile: "${{ runner.workspace }}/canary/main.json"
  validate-prod:
    name: Production
    needs:
    - build-canary
    - build-prod
    - build-test
    runs-on: ${{ env.vmImage }}
    environment:
      name: Production
    env:
      azureConnection: root
      location: swedencentral
      logAnalyticsWorkspaceId: "/subscriptions/e678d35b-125e-41ad-ae35-c04dfd4162e5/resourceGroups/Management/providers/Microsoft.OperationalInsights/workspaces/ondfisklz"
      managedIdentityId: "/subscriptions/e678d35b-125e-41ad-ae35-c04dfd4162e5/resourceGroups/Management/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ondfisklz"
      managementGroupId: lz
      policyAssignmentFolders: lz, lz/landing-zones/corp, lz/landing-zones/online
      vmImage: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.RUN_NUMBER == 1 }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: download artifact
      uses: actions/download-artifact@v4.1.0
    - uses: actions/checkout@v4.1.0
    - name: Compare initiatives
      uses: azure/login@v1.6.0
      with:
        creds: "${{ secrets.AZURE_CREDENTIALS }}"
        enable-AzPSSession: true
    - name: Compare initiatives
      uses: azure/powershell@v1.4.0
      with:
        inlineScript: |-
          $ErrorActionPreference = ("${{ github.ref }}" -eq "refs/heads/main") ? "Stop" : "Continue"
          ${{ github.workspace }}/modules/policies/scripts/Compare-Initiative.ps1 -ManagementGroupId ${{ env.managementGroupId }}
        errorActionPreference: Stop
        failOnStandardError: false
        azPSVersion: latest
    - uses: "./.github/actions/azdo_pipelines_templates_management_group_deployment"
      with:
        displayName: Validate deployment
        deploymentName: initiatives
        command: validate
        azureConnection: "${{ env.azureConnection }}"
        location: "${{ env.location }}"
        managementGroupId: "${{ env.managementGroupId }}"
        templateFile: "${{ runner.workspace }}/prod/main.json"
    - uses: "./.github/actions/azdo_pipelines_templates_management_group_deployment"
      with:
        displayName: What-if deployment
        deploymentName: initiatives
        command: what-if
        azureConnection: "${{ env.azureConnection }}"
        location: "${{ env.location }}"
        managementGroupId: "${{ env.managementGroupId }}"
        templateFile: "${{ runner.workspace }}/prod/main.json"
  deploy-canary:
    name: Canary
    needs:
    - validate-canary
    - validate-prod
    runs-on: ${{ env.vmImage }}
    environment:
      name: Canary
    env:
      azureConnection: root
      location: swedencentral
      logAnalyticsWorkspaceId: "/subscriptions/8228ddb9-d118-47b4-b4e7-1f1de7667d4d/resourceGroups/Management/providers/Microsoft.OperationalInsights/workspaces/ondfisklzcanary"
      managedIdentityId: "/subscriptions/8228ddb9-d118-47b4-b4e7-1f1de7667d4d/resourceGroups/Management/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ondfisklzcanary"
      managementGroupId: lz-canary
      policyAssignmentFolders: lz-canary, lz-canary/landing-zones/corp, lz-canary/landing-zones/online
      vmImage: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && success() && github.RUN_NUMBER == 1 }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: download artifact
      uses: actions/download-artifact@v4.1.0
    - uses: "./.github/actions/azdo_pipelines_templates_management_group_deployment"
      with:
        displayName: Deploy initiatives
        deploymentName: initiatives
        command: create
        azureConnection: "${{ env.azureConnection }}"
        location: "${{ env.location }}"
        managementGroupId: "${{ env.managementGroupId }}"
        templateFile: "${{ runner.workspace }}/canary/main.json"
  deploy-prod:
    name: Production
    needs:
    - validate-canary
    - validate-prod
    runs-on: ${{ env.vmImage }}
    environment:
      name: Production
    env:
      azureConnection: root
      location: swedencentral
      logAnalyticsWorkspaceId: "/subscriptions/e678d35b-125e-41ad-ae35-c04dfd4162e5/resourceGroups/Management/providers/Microsoft.OperationalInsights/workspaces/ondfisklz"
      managedIdentityId: "/subscriptions/e678d35b-125e-41ad-ae35-c04dfd4162e5/resourceGroups/Management/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ondfisklz"
      managementGroupId: lz
      policyAssignmentFolders: lz, lz/landing-zones/corp, lz/landing-zones/online
      vmImage: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && (success() && github.ref == 'refs/heads/main') && github.RUN_NUMBER == 1 }}
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: download artifact
      uses: actions/download-artifact@v4.1.0
    - uses: "./.github/actions/azdo_pipelines_templates_management_group_deployment"
      with:
        displayName: Deploy initiatives
        deploymentName: initiatives
        command: create
        azureConnection: "${{ env.azureConnection }}"
        location: "${{ env.location }}"
        managementGroupId: "${{ env.managementGroupId }}"
        templateFile: "${{ runner.workspace }}/prod/main.json"
