---
name: Policy Assignments

"on":
  push:
    branches:
      - main
    paths:
      - .github/workflows/policy-assignments.yml
      - modules/policies/assignments/**

  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/policy-assignments.yml
      - modules/policies/assignments/**

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Pester Tests
        run: Invoke-Pester -Path modules/policies/scripts/Test-Assignment.Tests.ps1, modules/policies/scripts/Test-AssignmentVars.Tests.ps1 -CI
        shell: pwsh

  canary:
    name: Canary
    runs-on: ubuntu-latest
    needs:
      - test
    environment:
      name: Canary
    strategy:
      matrix:
        assignment:
          - managementGroupId: lz-canary
            folder:
          - managementGroupId: lz-canary-landing-zones
            folder: landing-zones
          - managementGroupId: lz-canary-landing-zones-corp
            folder: landing-zones/corp
          - managementGroupId: lz-canary-landing-zones-online
            folder: landing-zones/online
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      - name: Compare assignments
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $managementGroupId = "${{ matrix.assignment.managementGroupId }}"
            $folder = "modules/policies/assignments/${{ matrix.assignment.folder }}"
            ./modules/policies/scripts/Compare-Assignment.ps1 -ManagementGroupId $managementGroupId -Folder $folder
          azPSVersion: latest
      - name: Build Template
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $folder = "modules/policies/assignments/${{ matrix.assignment.folder }}"
            $policyDefinitionManagementGroupId = "${{ vars.MANAGEMENT_GROUP_ID }}"
            $managedIdentityId = "${{ vars.MANAGED_IDENTITY_ID }}"
            $logAnalyticsWorkspaceId = "${{ vars.LOG_ANALYTICS_WORKSPACE_ID }}"
            $outputFile = "${{ github.workspace }}/main.bicep"
            ./modules/policies/scripts/Build-AssignmentTemplate.ps1 -Folder $folder -PolicyDefinitionManagementGroupId $policyDefinitionManagementGroupId -ManagedIdentityId $ManagedIdentityId -LogAnalyticsWorkspaceId $logAnalyticsWorkspaceId | Out-File -FilePath $outputFile
          azPSVersion: latest
      - name: Validate Deployment
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: "${{ matrix.assignment.managementGroupId }}"
          region: "${{ vars.LOCATION }}"
          template: main.bicep
          deploymentMode: Validate
      - name: What-if Deployment
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: "${{ matrix.assignment.managementGroupId }}"
          region: "${{ vars.LOCATION }}"
          template: main.bicep
          additionalArguments: --what-if
      - name: Deploy
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: "${{ matrix.assignment.managementGroupId }}"
          region: "${{ vars.LOCATION }}"
          template: main.bicep
          additionalArguments: --what-if

#   validate-prod:
#     name: Production
#     runs-on: ubuntu-latest
#     needs:
#       - build-prod
#       - test
#     environment:
#       name: Production
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Download Artifacts
#         uses: actions/download-artifact@v4
#         with:
#           name: prod
#       - name: Compare assignments
#         uses: azure/login@v2
#         with:
#           client-id: ${{ secrets.AZURE_CLIENT_ID }}
#           tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#           enable-AzPSSession: true
#       - name: Compare assignments
#         uses: azure/powershell@v1
#         with:
#           inlineScript: |
#             $ErrorActionPreference = ("${{ github.ref }}" -eq "refs/heads/main") ? "Stop" : "Continue"
#             ./modules/policies/scripts/Compare-Assignment.ps1 -Prefix ${{ vars.MANAGEMENT_GROUP_ID }}
#           errorActionPreference: Stop
#           failOnStandardError: false
#           azPSVersion: latest
#   #     # section was not transformed because it contains unsupported usage of the `each` syntax
#   #     - path: templates/management-group-deployment.yml
#   #       parameters:
#   #         displayName: Validate deployment in ${{ folder }}
#   #         deploymentName: assignments
#   #         command: validate
#   #         azureConnection: "${{ env.azureConnection }}"
#   #         location: "${{ env.location }}"
#   #         managementGroupId: "${{ replace(folder, '/', '-') }}"
#   #         templateFile: "${{ folder }}/main.json"
#   #       expression: "${{ each folder in split(variables.policyAssignmentFolders, ', ') }}"

#   deploy-canary:
#     name: Canary
#     runs-on: ubuntu-latest
#     needs:
#       - validate-canary
#     environment:
#       name: Canary
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Download Artifacts
#         uses: actions/download-artifact@v4
#         with:
#           name: canary
#   #     # section was not transformed because it contains unsupported usage of the `each` syntax
#   #     - path: templates/management-group-deployment.yml
#   #       parameters:
#   #         displayName: Deploy assignments in ${{ folder }}
#   #         deploymentName: assignments
#   #         command: create
#   #         azureConnection: "${{ env.azureConnection }}"
#   #         location: "${{ env.location }}"
#   #         managementGroupId: "${{ replace(folder, '/', '-') }}"
#   #         templateFile: "${{ folder }}/main.json"
#   #       expression: "${{ each folder in split(variables.policyAssignmentFolders, ', ') }}"

#   deploy-prod:
#     name: Production
#     runs-on: ubuntu-latest
#     if: success() && github.ref == 'refs/heads/main'
#     needs:
#       - validate-canary
#       - validate-prod
#     environment:
#       name: Production
#     strategy:
#       matrix:
#         FOLDER: ${{ vars.POLICY_ASSIGNMENT_FOLDERS }}
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Download Artifacts
#         uses: actions/download-artifact@v4
#         with:
#           name: prod
# #     # section was not transformed because it contains unsupported usage of the `each` syntax
# #     - path: templates/management-group-deployment.yml
# #       parameters:
# #         displayName: Deploy assignments in ${{ folder }}
# #         deploymentName: assignments
# #         command: create
# #         azureConnection: "${{ env.azureConnection }}"
# #         location: "${{ env.location }}"
# #         managementGroupId: "${{ replace(folder, '/', '-') }}"
# #         templateFile: "${{ folder }}/main.json"
# #       expression: "${{ each folder in split(variables.policyAssignmentFolders, ', ') }}"
