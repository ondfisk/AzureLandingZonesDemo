---
name: Policy Remediation

on:
  workflow_dispatch:
    inputs:
      remediateCanary:
        description: Remediate Canary
        default: true
        type: boolean
        required: false

      remediateProduction:
        description: Remediate Production
        default: true
        type: boolean
        required: false

  schedule:
  - cron: 0 0 * * *

jobs:
  canary:
    name: Canary
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.remediateCanary || github.event_name == 'schedule' }}
    environment:
      name: Canary
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      - name: Remediate
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $managementGroupId = "${{ vars.MANAGEMENT_GROUP_ID }}"
            ./modules/policies/scripts/Start-PolicyRemediation.ps1 -ManagementGroupId $managementGroupId
          azPSVersion: latest

  prod:
    name: Production
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.remediateProduction || github.event_name == 'schedule' }}
    environment:
      name: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      - name: Remediate
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $managementGroupId = "${{ vars.MANAGEMENT_GROUP_ID }}"
            ./modules/policies/scripts/Start-PolicyRemediation.ps1 -ManagementGroupId $managementGroupId
          azPSVersion: latest
...
