---
name: Management Groups

trigger:
  batch: true
  paths:
    include:
      - .azdo/pipelines/management-groups.yml
      - environments/canary/management-groups.bicepparam
      - environments/prod/management-groups.bicepparam
      - modules/management-groups/**
    exclude:
      - README.md

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: build
        displayName: Build
        variables:
          - template: ../../environments/build/vars.yml
        pool:
          vmImage: ${{ variables.vmImage }}
        steps:
          - task: AzureCLI@2
            displayName: Build Template
            inputs:
              azureSubscription: ${{ variables.azureConnection }}
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az bicep build --file modules/management-groups/main.bicep --outfile $(Build.ArtifactStagingDirectory)/main.json
                az bicep build-params --file environments/canary/management-groups.bicepparam --outfile $(Build.ArtifactStagingDirectory)/main.canary.parameters.json
                az bicep build-params --file environments/prod/management-groups.bicepparam --outfile $(Build.ArtifactStagingDirectory)/main.prod.parameters.json
              failOnStandardError: true

          - task: PublishPipelineArtifact@1
            displayName: Publish Artifacts
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)
              artifact: drop
              publishLocation: pipeline

  - stage: validate
    displayName: Validate
    dependsOn: build
    jobs:
      - deployment: canary
        displayName: Canary
        condition: succeeded()
        variables:
          - template: ../../environments/canary/vars.yml
        pool:
          vmImage: ${{ variables.vmImage }}
        environment: Canary
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/tenant-deployment.yml
                  parameters:
                    displayName: Validate deployment
                    deploymentName: management-groups
                    command: validate
                    azureConnection: ${{ variables.azureConnection }}
                    location: ${{ variables.location }}
                    templateFile: $(Pipeline.Workspace)/drop/main.json
                    parameters: $(Pipeline.Workspace)/drop/main.canary.parameters.json

                - template: templates/tenant-deployment.yml
                  parameters:
                    displayName: What-if deployment
                    deploymentName: management-groups
                    command: what-if
                    azureConnection: ${{ variables.azureConnection }}
                    location: ${{ variables.location }}
                    templateFile: $(Pipeline.Workspace)/drop/main.json
                    parameters: $(Pipeline.Workspace)/drop/main.canary.parameters.json

      - deployment: prod
        displayName: Production
        variables:
          - template: ../../environments/prod/vars.yml
        pool:
          vmImage: ${{ variables.vmImage }}
        environment: Production
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/tenant-deployment.yml
                  parameters:
                    displayName: Validate deployment
                    deploymentName: management-groups
                    command: validate
                    azureConnection: ${{ variables.azureConnection }}
                    location: ${{ variables.location }}
                    templateFile: $(Pipeline.Workspace)/drop/main.json
                    parameters: $(Pipeline.Workspace)/drop/main.prod.parameters.json

                - template: templates/tenant-deployment.yml
                  parameters:
                    displayName: What-if deployment
                    deploymentName: management-groups
                    command: what-if
                    azureConnection: ${{ variables.azureConnection }}
                    location: ${{ variables.location }}
                    templateFile: $(Pipeline.Workspace)/drop/main.json
                    parameters: $(Pipeline.Workspace)/drop/main.prod.parameters.json

  - stage: deploy
    displayName: Deploy
    dependsOn: validate
    jobs:
      - deployment: canary
        displayName: Canary
        condition: succeeded()
        variables:
          - template: ../../environments/canary/vars.yml
        pool:
          vmImage: ${{ variables.vmImage }}
        environment: Canary
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/tenant-deployment.yml
                  parameters:
                    displayName: Deploy management groups
                    deploymentName: management-groups
                    command: create
                    azureConnection: ${{ variables.azureConnection }}
                    location: ${{ variables.location }}
                    templateFile: $(Pipeline.Workspace)/drop/main.json
                    parameters: $(Pipeline.Workspace)/drop/main.canary.parameters.json

      - deployment: prod
        displayName: Production
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
        variables:
          - template: ../../environments/prod/vars.yml
        pool:
          vmImage: ${{ variables.vmImage }}
        environment: Production
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/tenant-deployment.yml
                  parameters:
                    displayName: Deploy management groups
                    deploymentName: management-groups
                    command: create
                    azureConnection: ${{ variables.azureConnection }}
                    location: ${{ variables.location }}
                    templateFile: $(Pipeline.Workspace)/drop/main.json
                    parameters: $(Pipeline.Workspace)/drop/main.prod.parameters.json
...
