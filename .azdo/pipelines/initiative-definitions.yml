---
name: Initiative Definitions

resources:
  pipelines:
  - pipeline: policy-definitions
    source: Policy Definitions
    trigger: true

trigger: none

stages:
  - stage: build
    displayName: Build & Test
    jobs:
      - job: canary
        displayName: Build (Canary)
        variables:
          - template: ../../environments/canary/vars.yml
        pool:
          vmImage: ${{ variables.vmImage }}
        steps:
          - task: AzureCLI@2
            displayName: Build Template
            inputs:
              azureSubscription: ${{ variables.azureConnection }}
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                $managementGroupId = "${{ variables.managementGroupId }}"
                $stagingDirectory = "$(Build.ArtifactStagingDirectory)"

                ./modules/policies/scripts/Build-InitiativeTemplate.ps1 -ManagementGroupId $managementGroupId
                az bicep build --file modules/policies/initiatives/main.bicep --outfile "$stagingDirectory/main.json"
              failOnStandardError: true

          - task: PublishPipelineArtifact@1
            displayName: Publish Artifacts
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)
              artifact: canary
              publishLocation: pipeline

      - job: prod
        displayName: Build (Production)
        variables:
          - template: ../../environments/prod/vars.yml
        pool:
          vmImage: ${{ variables.vmImage }}
        steps:
          - task: AzureCLI@2
            displayName: Build Template
            inputs:
              azureSubscription: ${{ variables.azureConnection }}
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                $managementGroupId = "${{ variables.managementGroupId }}"
                $stagingDirectory = "$(Build.ArtifactStagingDirectory)"
                New-Item -Path $stagingDirectory -ItemType Directory -Force | Out-Null

                ./modules/policies/scripts/Build-InitiativeTemplate.ps1 -ManagementGroupId $managementGroupId
                az bicep build --file modules/policies/initiatives/main.bicep --outfile "$stagingDirectory/main.json"
              failOnStandardError: true

          - task: PublishPipelineArtifact@1
            displayName: Publish Artifacts
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)
              artifact: prod
              publishLocation: pipeline

      - job: test
        displayName: Test
        variables:
          - template: ../../environments/build/vars.yml
        pool:
          vmImage: ${{ variables.vmImage }}
        steps:
          - task: PowerShell@2
            displayName: Run Pester Tests
            inputs:
              targetType: inline
              script: |
                Invoke-Pester -Path modules/policies/scripts/Test-Initiative.Tests.ps1 -CI
              pwsh: true

          - task: PublishTestResults@2
            displayName: Publish Test Results
            inputs:
              testResultsFormat: NUnit
              testResultsFiles: "**/testResults.xml"
              failTaskOnFailedTests: true
              failTaskOnMissingResultsFile: true

  - stage: validate
    displayName: Validate
    dependsOn: build
    jobs:
      - deployment: canary
        displayName: Canary
        condition: succeeded()
        variables:
          - template: ../../environments/canary/vars.yml
        pool:
          vmImage: ${{ variables.vmImage }}
        environment: Canary
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: AzurePowerShell@5
                  displayName: Compare initiatives
                  inputs:
                    azureSubscription: ${{ variables.azureConnection }}
                    ScriptType: InlineScript
                    Inline: |
                      $(Build.SourcesDirectory)/modules/policies/scripts/Compare-Initiative.ps1 -ManagementGroupId ${{ variables.managementGroupId }}
                    azurePowerShellVersion: LatestVersion
                    pwsh: true

                - template: templates/management-group-deployment.yml
                  parameters:
                    displayName: Validate deployment
                    deploymentName: initiatives
                    command: validate
                    azureConnection: ${{ variables.azureConnection }}
                    location: ${{ variables.location }}
                    managementGroupId: ${{ variables.managementGroupId }}
                    templateFile: $(Pipeline.Workspace)/canary/main.json

                - template: templates/management-group-deployment.yml
                  parameters:
                    displayName: What-if deployment
                    deploymentName: initiatives
                    command: what-if
                    azureConnection: ${{ variables.azureConnection }}
                    location: ${{ variables.location }}
                    managementGroupId: ${{ variables.managementGroupId }}
                    templateFile: $(Pipeline.Workspace)/canary/main.json

      - deployment: prod
        displayName: Production
        variables:
          - template: ../../environments/prod/vars.yml
        pool:
          vmImage: ${{ variables.vmImage }}
        environment: Production
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: AzurePowerShell@5
                  displayName: Compare initiatives
                  inputs:
                    azureSubscription: ${{ variables.azureConnection }}
                    ScriptType: InlineScript
                    Inline: |
                      $ErrorActionPreference = ("$(Build.SourceBranch)" -eq "refs/heads/main") ? "Stop" : "Continue"
                      $(Build.SourcesDirectory)/modules/policies/scripts/Compare-Initiative.ps1 -ManagementGroupId ${{ variables.managementGroupId }}
                    azurePowerShellVersion: LatestVersion
                    pwsh: true

                - template: templates/management-group-deployment.yml
                  parameters:
                    displayName: Validate deployment
                    deploymentName: initiatives
                    command: validate
                    azureConnection: ${{ variables.azureConnection }}
                    location: ${{ variables.location }}
                    managementGroupId: ${{ variables.managementGroupId }}
                    templateFile: $(Pipeline.Workspace)/prod/main.json

                - template: templates/management-group-deployment.yml
                  parameters:
                    displayName: What-if deployment
                    deploymentName: initiatives
                    command: what-if
                    azureConnection: ${{ variables.azureConnection }}
                    location: ${{ variables.location }}
                    managementGroupId: ${{ variables.managementGroupId }}
                    templateFile: $(Pipeline.Workspace)/prod/main.json

  - stage: deploy
    displayName: Deploy
    dependsOn: validate
    jobs:
      - deployment: canary
        displayName: Canary
        condition: succeeded()
        variables:
          - template: ../../environments/canary/vars.yml
        pool:
          vmImage: ${{ variables.vmImage }}
        environment: Canary
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/management-group-deployment.yml
                  parameters:
                    displayName: Deploy initiatives
                    deploymentName: initiatives
                    command: create
                    azureConnection: ${{ variables.azureConnection }}
                    location: ${{ variables.location }}
                    managementGroupId: ${{ variables.managementGroupId }}
                    templateFile: $(Pipeline.Workspace)/canary/main.json

      - deployment: prod
        displayName: Production
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
        variables:
          - template: ../../environments/prod/vars.yml
        pool:
          vmImage: ${{ variables.vmImage }}
        environment: Production
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/management-group-deployment.yml
                  parameters:
                    displayName: Deploy initiatives
                    deploymentName: initiatives
                    command: create
                    azureConnection: ${{ variables.azureConnection }}
                    location: ${{ variables.location }}
                    managementGroupId: ${{ variables.managementGroupId }}
                    templateFile: $(Pipeline.Workspace)/prod/main.json
...
